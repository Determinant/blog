![signed int 表示范围](http://www.tedyin.com/blog/wp-content/uploads/2011/03/int.png)

有符号32整型使用补码进行存储，其本质就是在mod 2^32下的同余表示  
设x (x >= 0) 以及x的反码y，显然： x + y == 2^32 - 1 ......(1)  
因为所有运算都是在mod 2^32 设定下进行，所以-x可以表示为： -x == 2^32 - x (mod 2^32)

由(1)式：2^32 - x = y + 1  
也就是说，一个负数可以表示为它的反码加一 (正数为原数，该表示方式称为补码)

进一步可以证明，从最高位是否为1来判别该数的正负性  
特别地，-2^31 == 2^32 - 2^31 == 2^31 (mod 2^32)

该数补码形式和自身绝对值相同，所以不能通过补码2^31辨别是-2^31还是2^31，故必须舍弃一个。

有两种方案：

1. -2^31 ~ 2^31 - 1
2. -(2^31 - 1) ~ 2^31

都是可行的。但是因为2^31的最高位为1，为了同一最高位为1的都表示负数，故采用方案1。

因此signed int 可表示范围为-2^31 ~ 2^31 - 1  
注意到正负界是不对称的，唯有-2^31没有在这个范围内的相反数。


